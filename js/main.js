!function(n){var c={};function I(t){if(c[t])return c[t].exports;var g=c[t]={i:t,l:!1,exports:{}};return n[t].call(g.exports,g,g.exports,I),g.l=!0,g.exports}I.m=n,I.c=c,I.d=function(n,c,t){I.o(n,c)||Object.defineProperty(n,c,{enumerable:!0,get:t})},I.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},I.t=function(n,c){if(1&c&&(n=I(n)),8&c)return n;if(4&c&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(I.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&c&&"string"!=typeof n)for(var g in n)I.d(t,g,function(c){return n[c]}.bind(null,g));return t},I.n=function(n){var c=n&&n.__esModule?function(){return n.default}:function(){return n};return I.d(c,"a",c),c},I.o=function(n,c){return Object.prototype.hasOwnProperty.call(n,c)},I.p="",I(I.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nconst table = document.querySelector(".table__body--js");\r\nconst form = document.querySelector(".form--js");\r\nconst searchCompany = document.getElementById("filter");\r\nconst select = document.querySelector(".form__select--js");\r\nconst pagination = document.querySelector(".pagination--js");\r\n\r\nlet state = {\r\n  companiesData: [],\r\n  filteredCompanies: [],\r\n  page: 0,\r\n  perPage: 10,\r\n  loaded: false,\r\n}\r\n\r\nif (!state.loaded) {\r\n  table.innerHTML = `<tr><td colspan="4" class="loader"><div class="loader__item"></div></td></tr>`;\r\n}\r\n\r\nsearchCompany.onkeypress = handleKeypress;\r\nform.onsubmit = handleSubmit;\r\nselect.onchange = handleSelect;\r\n\r\nfunction handleKeypress(e) {\r\n  setTimeout(() => {\r\n    let userInput = e.target.value;\r\n    state.filteredCompanies = state.companiesData.filter(company =>\r\n      company.name.toLowerCase().includes(userInput.toLowerCase())\r\n    );\r\n    state.page = 0;\r\n    showData(state.filteredCompanies);\r\n  }, 1000);\r\n}\r\n\r\nfunction handleSelect(e) {\r\n  state.page = 0;\r\n  state.perPage = parseInt(e.target.value);\r\n  showData(state.companiesData);\r\n}\r\n\r\nfunction handleSubmit(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction fetchData() {\r\n  fetch("https://recruitment.hal.skygate.io/companies")\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      const dataLength = data.length;\r\n      data.map(company => {\r\n        fetch("https://recruitment.hal.skygate.io/incomes/" + company.id)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            const companyIncome = res.incomes\r\n              .map(income => parseFloat(income.value))\r\n              .reduce((a, b) => a + b);\r\n\r\n              state.companiesData.push({\r\n              id: company.id,\r\n              name: company.name,\r\n              city: company.city,\r\n              income: companyIncome.toFixed(2)\r\n            });\r\n            if (state.companiesData.length === dataLength) {\r\n              state.companiesData.sort((a, b) => b.income - a.income);\r\n              showData(state.companiesData, 10);\r\n            }\r\n          });\r\n      });\r\n    });\r\n}\r\n\r\nfunction showData(data) {\r\n  let sliceFrom = 0 + state.perPage * state.page;\r\n  let sliceTo = state.perPage + state.perPage * state.page;\r\n  pagination.innerHTML = "";\r\n\r\n  table.innerHTML = data\r\n    .map(\r\n      company => `\r\n        <tr class="table__row table__row--js" id="${company.id}">\r\n          <td class="table__data">${company.id}</td>\r\n          <td class="table__data">${company.name}</td>\r\n          <td class="table__data">${company.city}</td>\r\n          <td class="table__data">${company.income}</td>\r\n        </tr>\r\n        `\r\n    )\r\n    .slice(sliceFrom, sliceTo)\r\n    .join("");\r\n\r\n\r\n/* HANDLE COMPANY DETAILS */\r\n\r\nconst detailsContener = document.querySelector(\'.details--js\');\r\nconst tableContainer = document.querySelector(\'.container\');\r\nconst companyDetails = Array.from(document.querySelectorAll(\'.table__row--js\'));\r\n\r\n    function countAvgIncomes(data) {\r\n      const avgIncomes = data.map(income => parseFloat(income.value)).reduce((a,b) => a+b) / data.length;\r\n      return avgIncomes.toFixed(2);\r\n    }\r\n\r\n    function countTotalIncomes(data) {\r\n      return data\r\n      .map(income => parseFloat(income.value))\r\n      .reduce((a,b) => a+b)\r\n      .toFixed(2);\r\n    }\r\n\r\n    companyDetails.map(company => company.addEventListener(\'click\', () => {\r\n      detailsContener.classList.add(\'details--visible\');\r\n      tableContainer.classList.add(\'container--hidden\');\r\n      let averageIncomes = null;\r\n      let lastMonthIncome = null;\r\n      let totalRangeIncome = \'No incomes in selected range\';\r\n      let avgRangeIncome = \'No incomes in selected range\';\r\n\r\n      fetch("https://recruitment.hal.skygate.io/incomes/" + company.id)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          \r\n          const sortedIncomes = data.incomes.sort((a,b) => new Date(b.date) - new Date(a.date))\r\n          const lastMonth = new Date(sortedIncomes[0].date).getMonth();\r\n          const relevantYear = new Date(sortedIncomes[0].date).getFullYear();\r\n          const filteredIncomes = sortedIncomes.filter(item => new Date(item.date).getMonth() === lastMonth && new Date(item.date).getFullYear() === relevantYear)\r\n          \r\n          lastMonthIncome = countTotalIncomes(filteredIncomes)\r\n          averageIncomes = countAvgIncomes(data.incomes)\r\n          \r\n          detailsContener.innerHTML = `\r\n          <div class="details__box">\r\n          <h1>${company.cells[1].textContent}</h1>\r\n          <p><b>City:</b> ${company.cells[2].textContent}</p>\r\n          <p><b>Total income:</b> ${company.cells[3].textContent}</p>\r\n          <p><b>Average income:</b> ${averageIncomes}</p>\r\n          <p><b>Last month income</b> (${new Date(sortedIncomes[0].date).toLocaleDateString(\'en-GB\', {month: \'long\'})}): ${lastMonthIncome}</p>\r\n          <p><b>Show total and average incomes</b></p>\r\n        \r\n          <p>\r\n            <label for="incomes-from">From: </label>\r\n            <input type="date" id="incomes-from">\r\n            <label for="incomes-to">To: </label>\r\n            <input type="date" id="incomes-to">\r\n            <div class="tooltip tooltip--js">\r\n              <span class="tooltiptext">Choose subsequent date or the same as a date \'From\'</span>\r\n            </div>\r\n          </p>\r\n\r\n          <div class="details__range details__range--js"></div>\r\n\r\n          <button class="return" id="return">Return</button>\r\n          </div>\r\n          `\r\n\r\n          const incomesFrom = document.getElementById(\'incomes-from\');\r\n          const incomesTo = document.getElementById(\'incomes-to\');\r\n          const tooltip = document.querySelector(\'.tooltip--js\');\r\n          const detailsRange = document.querySelector(\'.details__range--js\');\r\n          let dateFrom = null;\r\n          let dateTo = null;\r\n\r\n          incomesFrom.addEventListener(\'change\', (e) => {\r\n            if(e.target.value <= dateTo) {\r\n              tooltip.classList.remove(\'tooltip--visible\');\r\n            } else {\r\n              tooltip.classList.add(\'tooltip--visible\');\r\n              totalRangeIncome = \'No incomes in selected range\';\r\n              avgRangeIncome = \'No incomes in selected range\';\r\n              detailsRange.innerHTML = \'\';\r\n            }\r\n            dateFrom = e.target.value;\r\n            filterIncomesFromRange();\r\n          })\r\n          \r\n          incomesTo.addEventListener(\'change\', (e) => {\r\n            if(e.target.value < dateFrom) {\r\n              tooltip.classList.add(\'tooltip--visible\');\r\n              totalRangeIncome = \'No incomes in selected range\';\r\n              avgRangeIncome = \'No incomes in selected range\';\r\n              detailsRange.innerHTML = \'\';\r\n            } else {\r\n              tooltip.classList.remove(\'tooltip--visible\');\r\n          }\r\n\r\n            dateTo = e.target.value;\r\n            filterIncomesFromRange();\r\n          })\r\n\r\n          function filterIncomesFromRange() {\r\n            if(dateTo >= dateFrom && dateFrom !== null && dateTo !== null) {\r\n              const filteredIncomesFromRange = sortedIncomes.filter(item => new Date(item.date).getTime() >= new Date(dateFrom).getTime() && new Date(item.date).getTime() <= new Date(dateTo).getTime());\r\n\r\n              if(filteredIncomesFromRange != false) {\r\n                totalRangeIncome = countTotalIncomes(filteredIncomesFromRange);\r\n                avgRangeIncome = countAvgIncomes(filteredIncomesFromRange)\r\n              }\r\n                detailsRange.innerHTML = `\r\n                <p>total: ${totalRangeIncome}</p>\r\n                <p>average: ${avgRangeIncome}</p>\r\n                `;\r\n            }\r\n          }\r\n\r\n          const returnButton = document.getElementById(\'return\');\r\n          returnButton.addEventListener(\'click\', () => {\r\n            detailsContener.classList.remove(\'details--visible\')\r\n            tableContainer.classList.remove(\'container--hidden\')\r\n          })\r\n        })\r\n    }))\r\n\r\n/* HANDLE PAGINATION */\r\n  for (let i = 1; i <= Math.ceil(data.length / state.perPage); i++) {\r\n    pagination.innerHTML += `\r\n      <button class="pagination__button pagination__button--js">${i}</button>\r\n      `;\r\n  }\r\n\r\n  const buttons = Array.from(\r\n    document.querySelectorAll(".pagination__button--js")\r\n  );\r\n  \r\n  buttons.map(button => {\r\n    button.addEventListener("click", e => {\r\n      state.page = e.target.textContent - 1;\r\n      showData(data, state.perPage);\r\n    });\r\n  });\r\n}\r\n\r\nfetchData();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);